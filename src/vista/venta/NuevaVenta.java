/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.venta;

import controlador.ControladorCliente;
import controlador.ControladorLineaTransaccion;
import controlador.ControladorProducto;
import controlador.ControladorVenta;
import java.awt.Component;
import java.awt.DefaultKeyboardFocusManager;
import java.awt.KeyEventPostProcessor;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.input.KeyCode;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import javax.transaction.Transactional;
import modelo.Producto;
import modelo.Venta;
import modelo.Cliente;
import modelo.CuentaCorriente;
import modelo.LineaTransaccion;
import modelo.Remito;
import modelo.SistemaVenta;
import modelo.Factura;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.hibernate.Hibernate;
import controlador.ControladorFactura;
import controlador.ControladorRemito;
/**
 *
 * @author Analía Santomé
 */
public class NuevaVenta extends javax.swing.JFrame {
    List <Producto> productos_a_cargar=new ArrayList<>();
    ControladorVenta ctrven = new ControladorVenta();
    ControladorProducto ctrpro = new ControladorProducto();
    ControladorCliente ctrcli = new ControladorCliente();
    ControladorLineaTransaccion ctrltr = new ControladorLineaTransaccion();
    ControladorRemito ctrrem = new ControladorRemito();
    Cliente C = null;
    Map<Producto,Integer> productosACargar = new HashMap<>();
    Integer cantidadProducto = 1;
    Venta nueva=new Venta();
    SistemaVenta sv = SistemaVenta.getSistemaVenta();
    ControladorFactura ctrfac = new ControladorFactura();
    List<Venta> ventasActuales = new ArrayList<>();
    List<Factura> facturasActuales = new ArrayList<>();
    /**
     * Creates new form NuevaVenta
     * @throws java.lang.Exception
     */
    
    public NuevaVenta() throws Exception {
        initComponents();
        campoCodigoBarra.setFocusAccelerator('b');
        ventasActuales = ctrven.buscarConConsultaNombrada("Venta.findAll");
        facturasActuales = ctrfac.buscarConConsultaNombrada("Factura.findAll");
        
        numeroFactura.setText(String.format("%08d", ventasActuales.size()+1));
        setLocationRelativeTo(null);
        
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        campoCodigoBarra = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        campoSubtotal = new javax.swing.JFormattedTextField();
        campoDescuento = new javax.swing.JFormattedTextField();
        campoTotal = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        botonImprimir = new javax.swing.JButton();
        botonGuardarVenta2 = new javax.swing.JButton();
        botonGuardarVenta = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        campoCliente = new javax.swing.JTextField();
        botonBuscarCliente = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        campoTipoFactura = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        boxFecha = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        numeroFactura = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        boxFormaPago = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductosVenta = new javax.swing.JTable();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nueva venta");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        campoCodigoBarra.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        campoCodigoBarra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoCodigoBarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCodigoBarraActionPerformed(evt);
            }
        });
        campoCodigoBarra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoCodigoBarraKeyReleased(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/escanear.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campoCodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(campoCodigoBarra)
                        .addContainerGap())))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setText("Total  $");

        campoSubtotal.setEditable(false);
        campoSubtotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        campoSubtotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        campoDescuento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoDescuento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoDescuentoFocusLost(evt);
            }
        });
        campoDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDescuentoActionPerformed(evt);
            }
        });

        campoTotal.setEditable(false);
        campoTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoTotal.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Subtotal  $");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Descuento  %");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(campoSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(campoSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(campoDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(campoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {campoDescuento, campoSubtotal});

        botonImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/imprimir.png"))); // NOI18N
        botonImprimir.setBorder(null);
        botonImprimir.setBorderPainted(false);
        botonImprimir.setContentAreaFilled(false);
        botonImprimir.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImprimirActionPerformed(evt);
            }
        });

        botonGuardarVenta2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/salir.png"))); // NOI18N
        botonGuardarVenta2.setBorder(null);
        botonGuardarVenta2.setBorderPainted(false);
        botonGuardarVenta2.setContentAreaFilled(false);
        botonGuardarVenta2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonGuardarVenta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarVenta2ActionPerformed(evt);
            }
        });

        botonGuardarVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/guardar.png"))); // NOI18N
        botonGuardarVenta.setBorder(null);
        botonGuardarVenta.setBorderPainted(false);
        botonGuardarVenta.setContentAreaFilled(false);
        botonGuardarVenta.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonGuardarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonGuardarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonGuardarVenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonGuardarVenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonGuardarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Cliente");

        campoCliente.setEditable(false);
        campoCliente.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        campoCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoClienteActionPerformed(evt);
            }
        });

        botonBuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/buscarChico.png"))); // NOI18N
        botonBuscarCliente.setBorder(null);
        botonBuscarCliente.setBorderPainted(false);
        botonBuscarCliente.setContentAreaFilled(false);
        botonBuscarCliente.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarClienteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Tipo factura");

        campoTipoFactura.setEditable(false);
        campoTipoFactura.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        campoTipoFactura.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(campoTipoFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel4))
                            .addComponent(campoTipoFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(botonBuscarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(campoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {campoCliente, campoTipoFactura});

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        boxFecha.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Numero venta");

        numeroFactura.setEditable(false);
        numeroFactura.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        numeroFactura.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numeroFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroFacturaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Forma de pago");

        boxFormaPago.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        boxFormaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Credito", "Debito", "Cheque", "Cuenta Corriente" }));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Fecha");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(boxFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(boxFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(numeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(boxFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(boxFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/borrar.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/buscar.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tablaProductosVenta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tablaProductosVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Descripcion", "Precio unitario", "Cantidad", "Precio total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaProductosVenta);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void mostrarCartelError(Component padre,String error){
        JOptionPane.showMessageDialog(padre,
                       error,
                       "Error!",
                        JOptionPane.INFORMATION_MESSAGE);
    }
    private void campoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoClienteActionPerformed
        
    }//GEN-LAST:event_campoClienteActionPerformed
    
    private void agregarProductoATabla(Producto P,Integer cantidad_producto){
        if(productosACargar.containsKey(P)){
            Integer cantidadAnterior = productosACargar.get(P);
            productosACargar.replace(P, cantidadAnterior, cantidadAnterior+cantidad_producto);
        }else{
            this.productosACargar.put(P, cantidad_producto);
        }
        recargarTablaProductos();
        
    }
    
    private void limpiarCampos(){
        numeroFactura.setText("");
        campoTipoFactura.setText("");
        campoCliente.setText("");
        boxFecha.setDate(new Date());
        campoSubtotal.setText("");
        campoTotal.setText("");
        campoDescuento.setText("");
        
        DefaultTableModel dtm =(DefaultTableModel)tablaProductosVenta.getModel();
        dtm.setRowCount(0);
        
    }    
    private void recargarTablaProductos(){
        DefaultTableModel model = (DefaultTableModel) tablaProductosVenta.getModel();
        model.setRowCount(0);
        for(Entry<Producto, Integer> entry : productosACargar.entrySet()) {
            Producto P = entry.getKey();
            Integer cantidad_producto = entry.getValue();
            
            Object rowData[] = new Object[6];
            rowData[0] = P.getCodigoProducto();
            rowData[1] = P.getNombre();
            rowData[2] = P.getDescripcion();
            rowData[3] = P.getPrecioVenta();
            rowData[4] = cantidad_producto;
            rowData[5] = (P.getPrecioVenta()*cantidad_producto);
            model.addRow(rowData);
            tablaProductosVenta.setModel(model);

            

            // do what you have to do here
            // In your case, an other loop.
        }
        recalcularTotal();
            
        
    }
    private Double recalcularTotal(){
        Double subtotal=0.0;
        for(int i=0;i<tablaProductosVenta.getRowCount();i++){
            subtotal+= (Double)tablaProductosVenta.getValueAt(i, 5);
        }
        campoSubtotal.setText(String.valueOf(subtotal));
        campoTotal.setText(campoSubtotal.getText());
        return subtotal;
    }
    private void campoCodigoBarraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoCodigoBarraKeyReleased
        if(evt.getKeyChar()=='\n'){
            
            String codigo = campoCodigoBarra.getText();
            System.out.println(codigo);
            Map<String, Object> mapa = new HashMap<String,Object>();
            mapa.put("codBarra", Long.parseLong(codigo));
            Producto prod = new Producto();
            try {
                List<Producto> existe_barras = ctrpro.buscarConConsultaNombrada("Producto.findBarCode", mapa);
                prod = existe_barras.get(0);
                
            } catch (Exception ex) {
                mostrarCartelError(this,"No existe el producto buscado");
                campoCodigoBarra.setText("");
                return;
            }
            
            Integer cantidad = Integer.parseInt(JOptionPane.showInputDialog("Producto: "+prod.getNombre()+"\n"+
                                                                            "Cantidad?"));
            
            if((prod.getStockActual()- cantidad) < prod.getStockMinimo()){
                        if((prod.getStockActual()- cantidad) < 0){
                            JOptionPane.showMessageDialog(this,
                                "No hay stock suficiente del articulo solicitado, quedan "+prod.getStockActual()+" disponibles",
                                "Advertencia!",
                                JOptionPane.INFORMATION_MESSAGE);
                            return;
                        }else{
                            
                        if(!prod.getFaltante()){
                        JOptionPane.showMessageDialog(this,
                                "El producto seleccionado quedara por debajo del Stock minimo ",
                                "Advertencia!",
                                JOptionPane.INFORMATION_MESSAGE);
                            }
                        if(prod.getStockActual()-cantidad <= (prod.getStockMinimo()*20)/100){
                            JOptionPane.showMessageDialog(this,
                                "El producto seleccionado quedara por debajo de un nivel critico, se lo inhabilitara para la venta ",
                                "Advertencia!",
                                JOptionPane.INFORMATION_MESSAGE);
                            }
                            
                        }
                        prod.setFaltante(true);
                        agregarProductoATabla(prod, cantidad);
            }
            if((cantidad.equals(prod.getStockActual()))){
                JOptionPane.showMessageDialog(this,
                        "Con esta venta se agotan las existencias del producto",
                        "Advertencia!",
                        JOptionPane.INFORMATION_MESSAGE);
                prod.setFaltante(true);
                prod.setHabilitadoVenta(false);
                agregarProductoATabla(prod, cantidad);
            }else{
                agregarProductoATabla(prod, cantidad);
            }
            campoCodigoBarra.setText("");
            
            }
        
        
    }//GEN-LAST:event_campoCodigoBarraKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            agregarProductoVenta apv = new agregarProductoVenta(this, rootPaneCheckingEnabled);
            apv.setVisible(rootPaneCheckingEnabled);
            Integer cantidad_producto=apv.getCantidad();
            Long codigo_buscado=apv.getCodigoSeleccionado();
            Producto c = apv.getP();
            agregarProductoATabla(c,cantidad_producto);
            
           
        } catch (Exception ex) {
            Logger.getLogger(NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int target=tablaProductosVenta.getSelectedRow();
        Long codigoSeleccionado = (Long)tablaProductosVenta.getValueAt(target, 0);
        
        Iterator<Producto> iter=productos_a_cargar.iterator();
        while (iter.hasNext()) {
                Producto c = iter.next();
                if(codigoSeleccionado.equals(c.getCodigoProducto())){
                    iter.remove();
                    }
        }                
        
        System.out.println(this.productos_a_cargar.toString());
        ((DefaultTableModel)tablaProductosVenta.getModel()).removeRow(tablaProductosVenta.getSelectedRow());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void campoDescuentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoDescuentoFocusLost
        try{
        Double descuento = Double.parseDouble(campoDescuento.getText());//100;
        Double subtotal = Double.parseDouble(campoSubtotal.getText());
        if(descuento>100){
            JOptionPane.showMessageDialog(this,
                       "No se puede descontar mas del 100%",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
            campoDescuento.setText("0");
            campoTotal.setText(String.valueOf(subtotal));
            return;
        }
        Double total = subtotal - (subtotal * (descuento/100));
        campoTotal.setText(String.valueOf(total));
        }catch (Exception e){
            JOptionPane.showMessageDialog(this,
                       "Solo se aceptan numeros en el campo de descuento!",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
            campoDescuento.setText("0");
        }
    }//GEN-LAST:event_campoDescuentoFocusLost

    private void botonGuardarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarVentaActionPerformed
        //Venta nueva=new Venta();
        try{ 
        ctrven.crear(nueva);
        nueva.setFormaDePago((String)boxFormaPago.getSelectedItem());
        
        if(boxFecha.getDate()==null){
            JOptionPane.showMessageDialog(this,
                       "Por favor ingrese una fecha",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
            return;
        }else{
            nueva.setFecha(boxFecha.getDate());
        }
        
        String tipoFactura;
        if(C==null){
            Long a = Long.parseLong("104");
            C=ctrcli.buscar(Cliente.class, a);
            nueva.setCliente(C);
            System.out.println(C.getNombre());
            tipoFactura = "B";
        }else{
            nueva.setCliente(C);
            tipoFactura = campoTipoFactura.getText();
        }
        
        nueva.setSubTotal(Double.parseDouble(campoSubtotal.getText()));
        if(!campoDescuento.getText().isEmpty()){
            nueva.setDescuento(Double.parseDouble(campoDescuento.getText()));
        }else{
            nueva.setDescuento(0.0);
        }
        nueva.setTotal(Double.parseDouble(campoTotal.getText()));
        nueva.setMontoPago(Double.parseDouble(campoTotal.getText()));
        nueva.setNumero_factura(numeroFactura.getText());
        
        nueva.setTipo_factura(tipoFactura.charAt(0));
        
        }catch(Exception e){
            mostrarCartelError(this,"Ocurrio un error en la carga de algun dato");
        }
       
            for(Entry<Producto, Integer> entry : productosACargar.entrySet()){
                Producto P = entry.getKey();
                Integer cant_a_disminuir = entry.getValue();
                P.disminuirStock(cant_a_disminuir);
                
                try {
                        ctrpro.actualizar(P);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        mostrarCartelError(this,"Ocurrio un error al actualizar el stock");
                    }
                
            }
        
        if(boxFormaPago.getSelectedItem().equals("Cuenta Corriente")){
            Double total = nueva.getTotal();
            if(C.cuentaExcedida(total)){
                int respuesta=JOptionPane.showConfirmDialog(this,
                        "Con esta venta se supera el monton habilitado para la cuenta del cliente: "+C.getNombre()+" "+
                        "¿Desea realizarla igualmente?",
                        "Atencion!",
                        JOptionPane.YES_NO_OPTION);
                if(respuesta == JOptionPane.YES_OPTION){
                    C.sumarACuentaCorriente(total);
                        
                }else{
                   return; 
                }
            }else{
                C.sumarACuentaCorriente(total);  
        }
           try {
               ctrcli.actualizar(C);
           } catch (Exception ex) {
               ex.printStackTrace();
               mostrarCartelError(this,"Ocurrio un error al actualizar la Cuenta Corriente");
           }
        }
        try{
            
            for(int i=0;i<tablaProductosVenta.getRowCount();i++){
                LineaTransaccion nuevaLinea = new LineaTransaccion();
                nuevaLinea.setIdProducto((Long)tablaProductosVenta.getValueAt(i, 0));
                nuevaLinea.setNombreProducto((String)tablaProductosVenta.getValueAt(i, 1));
                nuevaLinea.setDescripcionProducto((String)tablaProductosVenta.getValueAt(i, 2));
                nuevaLinea.setPrecioUnitario((Double)tablaProductosVenta.getValueAt(i, 3));
                nuevaLinea.setCantidad((Integer)tablaProductosVenta.getValueAt(i, 4));
                nuevaLinea.setTotal((Double)tablaProductosVenta.getValueAt(i, 5));
                //nuevaLinea.setTransaccionPadre(nueva);
                ctrltr.crear(nuevaLinea);
                nueva.agregarLinea(nuevaLinea); 
            }
            //ctrven.actualizar(nueva);
            //sv.addVenta(nueva);
            //sv.guardarDatos();
            
           
            //LO QUE SIGUE ES SACADO DEL SISTEMA DE AGUS
            String[] options = {"Facturar y Cobrar", "Solo Facturar", "Remitar"};
            int seleccion = JOptionPane.showOptionDialog(null, "Venta generada con éxito!", "¿Que desea hacer?", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            switch (seleccion) {
                case 0:
                    //System.out.println("CASE 0 - FACTURAR Y COBRAR");
                    if(boxFormaPago.getSelectedItem().equals("Cuenta Corriente")){
                        nueva.setEstadoPago(Boolean.FALSE);
                        nueva.setFechaCobro(null);
                    }else{
                        nueva.setEstadoPago(Boolean.TRUE);
                        nueva.setFechaCobro(nueva.getFecha());
                    }
                    nueva.setEstaFacturada(Boolean.TRUE);
                    nueva.setFechaFacturacion(nueva.getFecha());
                    ctrven.actualizar(nueva);
                    //sv.guardarDatos(); //el tiene una clase SISTEMA DE VENTAS
                    generarFactura();
                    
                    break;
                case 1:
                    //System.out.println("CASE 1 - FACTURAR");
                    nueva.setEstadoPago(false);
                    nueva.setEstaFacturada(true);
                    nueva.setFechaFacturacion(nueva.getFecha());
                    nueva.setFechaCobro(null);
                    ctrven.actualizar(nueva);
                    //sv.guardarDatos();
                    generarFactura();
                    break;
                case 2:
                    //System.out.println("CASE 2 - REMITAR");
                    nueva.setEstadoPago(false);
                    nueva.setEstaFacturada(false);
                    nueva.setRemitada(true);
                    nueva.setFechaFacturacion(null);
                    nueva.setFechaCobro(null);
                    ctrven.actualizar(nueva);
                    //sv.guardarDatos();
                    generarRemito();
                    break;
                default:
                    break;
            }
            
            
            
            //HASTA ACA SACADO DE LO DE AGUS
            
            
            
            //EL ORIGINAL NUESTRO 
            //|
            //\/
            int respuesta=JOptionPane.showConfirmDialog(this,
                        "Se registro correctamente la venta" +
                        "¿Desea registrar otra?",
                        "Exito",
                        JOptionPane.YES_NO_OPTION);
                if(respuesta == JOptionPane.YES_OPTION){
                    limpiarCampos();
                    nueva = new Venta(); //antes no estaba, pero si lo pongo arriba necesito reiniciarla
                    }else{
                   super.dispose(); 
                }
        }catch(Exception e){
            e.printStackTrace();
            mostrarCartelError(this,"Ocurrio un error al cargar la venta");
        }
    }//GEN-LAST:event_botonGuardarVentaActionPerformed

    //SACADO DEL CODIGO DE AGUS
        public void generarRemito(){
        Remito remitoNuevo = new Remito();
        try{
        ControladorRemito ctrrem = new ControladorRemito();
        
        ctrrem.crear(remitoNuevo);
        remitoNuevo.setVenta(nueva);
        remitoNuevo.setFechaEmision(new Date());
        remitoNuevo.setNroRemito(ctrrem.buscarConConsultaNombrada("Remito.findAll").size() + 1);
        remitoNuevo.setNroPuntoRemito(sv.getPuntoVenta());
        }catch (Exception ex){
            ex.printStackTrace();
        }
        String direccionCliente;
            if(C!=null){
               direccionCliente = C.getCalle()+", "+C.getNumeroCalle()+", "+C.getLocalidad()+", "+C.getProvincia();
            }else{
                direccionCliente = "";
            }
            try {
                ctrrem.actualizar(remitoNuevo);
            } catch (Exception ex) {
                ex.printStackTrace();
                Logger.getLogger(NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        //sv.addRemito(remitoNuevo);
        //sv.guardarDatos();
        try {
            JasperReport jr = (JasperReport)JRLoader.loadObject
            (this.getClass().getResource("/reporte/remito.jasper"));
            //JasperReport jr = JasperCompileManager.compileReport(getClass()
            //        .getResource("/reporte/facturaA.jrxml").getPath());
            Map mapa = new HashMap();
            JasperPrint jp;
            mapa.put("domicilioEmpresa", sv.getDomicilio());
            mapa.put("nombreEmpresa", sv.getNombre());
            mapa.put("condicionIVAEmpresa", sv.getCondicionIva());
            mapa.put("puntoDeVentaEmpresa", String.format("%04d", sv.getPuntoVenta()));
            mapa.put("nroFactura", String.format("%08d", remitoNuevo.getNroRemito()));
            mapa.put("cuitEmpresa", sv.getCuit());
            mapa.put("fechaInicioActividades", sv.getFechaInicio());
            mapa.put("cuitCliente", String.valueOf(remitoNuevo.getVenta().getCliente().getCuit()));
            mapa.put("condicionIvaCliente", remitoNuevo.getVenta().getCliente().getCondicionIVA());
            mapa.put("nombreCliente", remitoNuevo.getVenta().getCliente().getNombre());
            Cliente clienteRemito = remitoNuevo.getVenta().getCliente();
            
            mapa.put("domicilioCliente", direccionCliente);
                     
            jp = JasperFillManager.fillReport(jr,
                mapa , new JRBeanCollectionDataSource(remitoNuevo.getListaRemito()));
            JasperViewer visor = new JasperViewer(jp,false);
            visor.setVisible(true);
            this.dispose();
            visor.toFront();
        }catch (JRException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void generarFactura(){
        Factura factura = new Factura();
        factura.setVenta(nueva);
        factura.setFechaEmision(new Date());
        factura.setNroPuntoFactura(sv.getPuntoVenta());
        
        String condicionIVA = "Responsable Inscripto"; 
        if(sv.getCondicionIva().equalsIgnoreCase(condicionIVA) 
                && factura.getVenta().getCliente().getCondicionIVA().equalsIgnoreCase(condicionIVA)){
            generarFacturaA(factura);
        }else if (sv.getCondicionIva().equalsIgnoreCase(condicionIVA)) {
            generarFacturaB(factura);
        }else
            generarFacturaC(factura);
    }
    
    public void generarFacturaA(Factura factura){
        try {
            factura.setTipoFactura("A");
            factura.setImporteTotal(factura.getVenta().getImporteTotalConIVA());
            
            int numeroFacturaNuevo = 1;
            for(Factura f : facturasActuales){
                if(f.getTipoFactura().equalsIgnoreCase("A")){
                    numeroFacturaNuevo++;
                }
            }
            factura.setNroFactura(numeroFacturaNuevo);
            
            /*if(!factura.getVenta().getEstadoPago()){
                factura.getVenta().getCliente().getCuentaCorriente().reducirMontoAcumulado((double)factura.getImporteTotal());
            }*/
            try {
                ctrfac.crear(factura);
            } catch (Exception ex) {
                ex.printStackTrace();
                Logger.getLogger(NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
            sv.addFactura(factura);
            sv.guardarDatos();
            
            JasperReport jr = (JasperReport)JRLoader.loadObject
            (this.getClass().getResource("/reporte/facturaA.jasper"));
            //JasperReport jr = JasperCompileManager.compileReport(getClass()
            //        .getResource("/reporte/facturaA.jrxml").getPath());
            Map mapa = new HashMap();
            JasperPrint jp;
            
            String direccionCliente;
            if(C!=null){
               direccionCliente = C.getCalle()+", "+C.getNumeroCalle()+", "+C.getLocalidad()+", "+C.getProvincia();
            }else{
                direccionCliente = "";
            }
            
            sv.addFactura(factura);
            sv.guardarDatos();
            mapa.put("domicilioEmpresa", sv.getDomicilio());
            mapa.put("nombreEmpresa", sv.getNombre());
            mapa.put("condicionIVAEmpresa", sv.getCondicionIva());
            mapa.put("puntoDeVentaEmpresa", String.format("%04d", sv.getPuntoVenta()));
            mapa.put("nroFactura", String.format("%08d", numeroFacturaNuevo));
            mapa.put("cuitEmpresa", sv.getCuit());
            mapa.put("fechaInicioActividades", sv.getFechaInicio());
            mapa.put("cuitCliente", String.valueOf(factura.getVenta().getCliente().getCuit()));
            mapa.put("condicionIvaCliente", factura.getVenta().getCliente().getCondicionIVA());
            mapa.put("formaPago", factura.getVenta().getFormaDePago());
            mapa.put("nombreCliente", factura.getVenta().getCliente().getNombre());
            mapa.put("domicilioCliente", direccionCliente);
            mapa.put("remitos", sv.getNroRemito(factura.getVenta()));
            mapa.put("importeNeto", String.valueOf(factura.getVenta().getTotal()));
            mapa.put("IVA27", String.valueOf(factura.getVenta().getIva27()));
            mapa.put("IVA21", String.valueOf(factura.getVenta().getIva21()));
            mapa.put("IVA10", String.valueOf(factura.getVenta().getIva10()));
            mapa.put("IVA5", String.valueOf(factura.getVenta().getIva05()));
            mapa.put("importeTotal", String.valueOf(factura.getImporteTotal()));
                     
            jp = JasperFillManager.fillReport(jr,
                mapa , new JRBeanCollectionDataSource(factura.getListaComprobanteA()));
            JasperViewer visor = new JasperViewer(jp,false);
            visor.setVisible(true);
            this.dispose();
            visor.toFront();
        }catch (JRException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void generarFacturaB(Factura factura){
        try {
            factura.setTipoFactura("B");
            factura.setImporteTotal(factura.getVenta().getImporteTotalConIVA());
            int numeroFacturaNuevo = 1;
            for(Factura f : facturasActuales){
                if(f.getTipoFactura().equalsIgnoreCase("B")){
                    numeroFacturaNuevo++;
                }
            }
            factura.setNroFactura(numeroFacturaNuevo);
            /*if(!factura.getVenta().getEstadoPago()){
                factura.getVenta().getCliente().getCuentaCorriente().reducirMontoAcumulado((double)factura.getImporteTotal());
            }*/
            String direccionCliente;
            
            if(C!=null){
               direccionCliente = C.getCalle()+", "+C.getNumeroCalle()+", "+C.getLocalidad()+", "+C.getProvincia();
            }else{
                direccionCliente = "";
            }
            try {
                ctrfac.crear(factura);
            } catch (Exception ex) {
                ex.printStackTrace();
                Logger.getLogger(NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
            sv.addFactura(factura);
            sv.guardarDatos();
            
            JasperReport jr = (JasperReport)JRLoader.loadObject
            (this.getClass().getResource("/reporte/facturaB.jasper"));
            //JasperReport jr = JasperCompileManager.compileReport(getClass()
            //        .getResource("/reporte/facturaA.jrxml").getPath());
            Map mapa = new HashMap();
            JasperPrint jp;
            mapa.put("domicilioEmpresa", sv.getDomicilio());
            mapa.put("nombreEmpresa", sv.getNombre());
            mapa.put("condicionIVAEmpresa", sv.getCondicionIva());
            mapa.put("puntoDeVentaEmpresa", String.format("%04d", sv.getPuntoVenta()));
            mapa.put("nroFactura", String.format("%08d", numeroFacturaNuevo));
            mapa.put("cuitEmpresa", sv.getCuit());
            mapa.put("fechaInicioActividades", sv.getFechaInicio());
            mapa.put("cuitCliente", String.valueOf(factura.getVenta().getCliente().getCuit()));
            mapa.put("condicionIvaCliente", factura.getVenta().getCliente().getCondicionIVA());
            mapa.put("formaPago", factura.getVenta().getFormaDePago());
            mapa.put("nombreCliente", factura.getVenta().getCliente().getNombre());
            
            mapa.put("domicilioCliente", direccionCliente);
            mapa.put("remitos", sv.getNroRemito(factura.getVenta()));
            mapa.put("importeTotal", String.valueOf(factura.getImporteTotal()));
                     
            jp = JasperFillManager.fillReport(jr,
                mapa , new JRBeanCollectionDataSource(factura.getListaComprobanteB()));
            JasperViewer visor = new JasperViewer(jp,false);
            visor.setVisible(true);
            this.dispose();
            visor.toFront();
        }catch (JRException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void generarFacturaC(Factura factura){
        try {
            factura.setTipoFactura("C");
            String total = String.valueOf(factura.getVenta().getSubTotal());
            Float total2 = Float.valueOf(total);
            factura.setImporteTotal(total2);
            
            int numeroFacturaNueva = 1;
            for(Factura f : facturasActuales){
                if(f.getTipoFactura().equalsIgnoreCase("C")){
                    numeroFacturaNueva++;
                }
            }
            factura.setNroFactura(numeroFacturaNueva);
            
            /*if(!factura.getVenta().getEstadoPago()){
                factura.getVenta().getCliente().getCuentaCorriente().reducirMontoAcumulado((double)factura.getImporteTotal());
            }*/
            String direccionCliente;
            if(C!=null){
               direccionCliente = C.getCalle()+", "+C.getNumeroCalle()+", "+C.getLocalidad()+", "+C.getProvincia();
            }else{
               direccionCliente = "";
            }
            try {
                ctrfac.crear(factura);
            } catch (Exception ex) {
                ex.printStackTrace();
                Logger.getLogger(NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
            sv.addFactura(factura);
            sv.guardarDatos();
            
            JasperReport jr = (JasperReport)JRLoader.loadObject
            (this.getClass().getResource("/reporte/facturaC.jasper"));
            //JasperReport jr = JasperCompileManager.compileReport(getClass()
            //        .getResource("/reporte/facturaA.jrxml").getPath());
            Map mapa = new HashMap();
            JasperPrint jp;
            mapa.put("domicilioEmpresa", sv.getDomicilio());
            mapa.put("nombreEmpresa", sv.getNombre());
            mapa.put("condicionIVAEmpresa", sv.getCondicionIva());
            mapa.put("puntoDeVentaEmpresa", String.format("%04d", sv.getPuntoVenta()));
            mapa.put("nroFactura", String.format("%08d", numeroFacturaNueva));
            mapa.put("cuitEmpresa", sv.getCuit());
            mapa.put("fechaInicioActividades", sv.getFechaInicio());
            mapa.put("cuitCliente", String.valueOf(factura.getVenta().getCliente().getCuit()));
            mapa.put("condicionIvaCliente", factura.getVenta().getCliente().getCondicionIVA());
            mapa.put("formaPago", factura.getVenta().getFormaDePago());
            mapa.put("nombreCliente", factura.getVenta().getCliente().getNombre());
            
            mapa.put("domicilioCliente", direccionCliente);
            mapa.put("remitos", sv.getNroRemito(factura.getVenta()));
            mapa.put("importeTotal", String.valueOf(factura.getImporteTotal()));
                     
            jp = JasperFillManager.fillReport(jr,
                mapa , new JRBeanCollectionDataSource(factura.getListaComprobanteC()));
            JasperViewer visor = new JasperViewer(jp,false);
            
            visor.setVisible(true);
            this.dispose();
            visor.toFront();
        }catch (JRException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //TERMINA LO DE AGUS
    
    
    
    
    
    
    private void botonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonImprimirActionPerformed

    private void botonGuardarVenta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarVenta2ActionPerformed
        int respuesta=JOptionPane.showConfirmDialog(this,
                        "¿Desea salir sin terminar la operacion?",
                        "Exito",
                        JOptionPane.YES_NO_OPTION);
                if(respuesta == JOptionPane.YES_OPTION){
                    super.dispose();
                        
                    }else{
                   return; 
                }
    }//GEN-LAST:event_botonGuardarVenta2ActionPerformed

    private void botonBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarClienteActionPerformed
        try{
            agregarClienteVenta acv = new agregarClienteVenta(this, rootPaneCheckingEnabled);
            acv.setVisible(true);
            C = acv.getC();
            if(C==null){
                campoCliente.setText("");
            }
            
            campoCliente.setText(C.getCodigoCliente()+" - "+C.getNombre());
            if(C.getCondicionIVA().equals("Responsable Inscripto")){
                campoTipoFactura.setText("A");
            }else{
                campoTipoFactura.setText("B");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_botonBuscarClienteActionPerformed

    private void numeroFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroFacturaActionPerformed

    private void campoCodigoBarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCodigoBarraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCodigoBarraActionPerformed

    private void campoDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDescuentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDescuentoActionPerformed
    /**/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevaVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevaVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevaVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevaVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new NuevaVenta().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscarCliente;
    private javax.swing.JButton botonGuardarVenta;
    private javax.swing.JButton botonGuardarVenta2;
    private javax.swing.JButton botonImprimir;
    private com.toedter.calendar.JDateChooser boxFecha;
    private javax.swing.JComboBox<String> boxFormaPago;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField campoCliente;
    private javax.swing.JTextField campoCodigoBarra;
    private javax.swing.JFormattedTextField campoDescuento;
    private javax.swing.JFormattedTextField campoSubtotal;
    private javax.swing.JTextField campoTipoFactura;
    private javax.swing.JFormattedTextField campoTotal;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numeroFactura;
    private javax.swing.JTable tablaProductosVenta;
    // End of variables declaration//GEN-END:variables
}
