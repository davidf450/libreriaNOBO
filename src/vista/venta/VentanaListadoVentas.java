/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.venta;

import TableRenders.StatusColumnCellRenderer;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.Producto;
import javax.swing.table.DefaultTableModel;
import modelo.Transaccion;
import modelo.Venta;
import controlador.ControladorVenta;
import modelo.Usuario;
import controlador.ControladorProducto;
import controlador.ControladorCliente;
import java.awt.Frame;
import java.awt.Window;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import modelo.Cliente;
import modelo.Factura;
import modelo.LineaTransaccion;
import modelo.SistemaVenta;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import vista.cliente.SumarACC;
import controlador.ControladorFactura;
import java.util.List;
import java.util.ArrayList;
import java.util.Objects;
/**
 *
 * @author Analía Santomé
 */
public class VentanaListadoVentas extends javax.swing.JDialog {
    ControladorVenta ctrven = new ControladorVenta();
    ControladorProducto ctrpro = new ControladorProducto();
    Usuario usuarioActual;
    SistemaVenta sv = SistemaVenta.getSistemaVenta();
    ControladorFactura ctrfac = new ControladorFactura();
    List<Venta> ventasActuales = new ArrayList<>();
    List<Venta> ventasFiltradas = new ArrayList<>();
    List<Factura> facturasActuales = new ArrayList<>();
    ControladorCliente ctrcli = new ControladorCliente();
          

    /**
     * Creates new form VentanaListadoCuentas
     */
    public VentanaListadoVentas(java.awt.Frame parent, boolean modal,Usuario usuarioLogueado) throws Exception {
        super(parent, modal);
        usuarioActual = usuarioLogueado;
        initComponents();
        if(!usuarioActual.getEsAdministrador()){
            botonBorrar.setVisible(false);
            etiquetaBotonBorrar.setVisible(false);
        }
        facturasActuales = ctrfac.buscarConConsultaNombrada("Factura.findAll");
        
        setLocationRelativeTo(null);
        formWindowOpened();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVentas = new javax.swing.JTable();
        botonBorrar = new javax.swing.JButton();
        etiquetaBotonBorrar = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        botonCobro = new javax.swing.JButton();
        botonFactura = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        campoCliente = new javax.swing.JTextField();
        botonBuscarCliente = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        boxFactura = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        boxEstado = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        campoMayorQue = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        campoMenorQue = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        campoMaximoEntre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        campoMinimoEntre = new javax.swing.JTextField();
        botonMayorQue = new javax.swing.JRadioButton();
        botonMenorQue = new javax.swing.JRadioButton();
        botonEntreMonto = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        campoPosteriorEntre = new com.toedter.calendar.JDateChooser();
        campoAnteriorEntre = new com.toedter.calendar.JDateChooser();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        campoPosterior = new com.toedter.calendar.JDateChooser();
        campoAnterior = new com.toedter.calendar.JDateChooser();
        botonFiltrar = new javax.swing.JButton();
        botonFiltrar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablaVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Fecha", "Estado", "Cliente", "Tipo factura", "Numero venta", "Forma de pago", "Facturada", "Estado pago", "Total", "Resto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaVentas);
        if (tablaVentas.getColumnModel().getColumnCount() > 0) {
            tablaVentas.getColumnModel().getColumn(0).setMaxWidth(60);
            tablaVentas.getColumnModel().getColumn(1).setMaxWidth(110);
            tablaVentas.getColumnModel().getColumn(2).setMaxWidth(110);
            tablaVentas.getColumnModel().getColumn(3).setMaxWidth(350);
            tablaVentas.getColumnModel().getColumn(4).setMaxWidth(80);
            tablaVentas.getColumnModel().getColumn(5).setMaxWidth(250);
            tablaVentas.getColumnModel().getColumn(6).setMaxWidth(150);
            tablaVentas.getColumnModel().getColumn(7).setMaxWidth(80);
            tablaVentas.getColumnModel().getColumn(8).setMaxWidth(100);
            tablaVentas.getColumnModel().getColumn(9).setMaxWidth(120);
            tablaVentas.getColumnModel().getColumn(10).setMaxWidth(120);
        }

        botonBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/borrar.png"))); // NOI18N
        botonBorrar.setToolTipText("Borrar Venta");
        botonBorrar.setContentAreaFilled(false);
        botonBorrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/borrarSinTapa.png"))); // NOI18N
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        etiquetaBotonBorrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        etiquetaBotonBorrar.setText("Anular");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/buscar.png"))); // NOI18N
        jButton2.setToolTipText("Detalles venta");
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Detalles");

        botonCobro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonCobro.setText("Registrar cobro");
        botonCobro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCobroActionPerformed(evt);
            }
        });

        botonFactura.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonFactura.setText("Generar factura");
        botonFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFacturaActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtrar por", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CLIENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        campoCliente.setEditable(false);
        campoCliente.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        campoCliente.setForeground(new java.awt.Color(255, 0, 0));
        campoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoClienteActionPerformed(evt);
            }
        });

        botonBuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/buscarChico.png"))); // NOI18N
        botonBuscarCliente.setBorder(null);
        botonBuscarCliente.setBorderPainted(false);
        botonBuscarCliente.setContentAreaFilled(false);
        botonBuscarCliente.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(campoCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonBuscarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TIPO DE FACTURA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        boxFactura.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        boxFactura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "A", "B", "C", "REMITO" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boxFactura, 0, 96, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(boxFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ESTADO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        boxEstado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        boxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "PAGA", "IMPAGA" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boxEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(boxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MONTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Mayor que :");

        campoMayorQue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Menor que: ");

        campoMenorQue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        jPanel9.setForeground(new java.awt.Color(204, 204, 204));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Entre: ");

        campoMaximoEntre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setText("y");

        campoMinimoEntre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoMinimoEntre, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campoMaximoEntre, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(campoMaximoEntre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(campoMinimoEntre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonGroup1.add(botonMayorQue);
        botonMayorQue.setSelected(true);

        buttonGroup1.add(botonMenorQue);

        buttonGroup1.add(botonEntreMonto);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(botonMayorQue)
                        .addComponent(botonMenorQue))
                    .addComponent(botonEntreMonto, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoMenorQue))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoMayorQue, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(campoMayorQue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonMayorQue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(campoMenorQue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botonMenorQue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonEntreMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FECHA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Posterior a");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Anterior  a");

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Entre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel7.setForeground(new java.awt.Color(204, 204, 204));

        jLabel5.setText("y");

        campoPosteriorEntre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        campoAnteriorEntre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(campoPosteriorEntre, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoAnteriorEntre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {campoAnteriorEntre, campoPosteriorEntre});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoAnteriorEntre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoPosteriorEntre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setSelected(true);

        buttonGroup2.add(jRadioButton2);

        buttonGroup2.add(jRadioButton3);

        campoPosterior.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        campoAnterior.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jRadioButton1)
                        .addComponent(jRadioButton2))
                    .addComponent(jRadioButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(campoPosterior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jRadioButton1))
                    .addComponent(campoPosterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3)
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                    .addComponent(campoAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botonFiltrar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonFiltrar.setText("Filtrar");
        botonFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFiltrarActionPerformed(evt);
            }
        });

        botonFiltrar1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonFiltrar1.setText("Limpiar");
        botonFiltrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFiltrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botonFiltrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonFiltrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 204, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(botonCobro)
                                .addGap(28, 28, 28)
                                .addComponent(botonFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(283, 283, 283)
                                .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(etiquetaBotonBorrar)
                                .addGap(53, 53, 53)
                                .addComponent(jLabel2)
                                .addGap(28, 28, 28)))
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botonCobro, botonFactura});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(botonCobro)
                                .addComponent(botonFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etiquetaBotonBorrar)
                            .addComponent(jLabel2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonBorrar, botonCobro, botonFactura});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
        int respuesta=JOptionPane.showConfirmDialog(this,
                        "¿Desea anular esta venta?",
                        "Atencion!",
                        JOptionPane.YES_NO_OPTION);
        if(respuesta == JOptionPane.NO_OPTION){
            super.dispose();
        }else if(respuesta == JOptionPane.YES_OPTION){
            String passAdmin = JOptionPane.showInputDialog("Por favor reingrese la clave de administrador");
            if(!passAdmin.equals(usuarioActual.getPassword())){
                JOptionPane.showMessageDialog(this,
                           "Fallo de auntentificación",
                           "Error!",
                            JOptionPane.ERROR_MESSAGE);
            }else{

                try {

                    int seleccionada = tablaVentas.getSelectedRow();
                    Long codigo= (Long)tablaVentas.getValueAt(seleccionada, 0);
                    Venta aAnular = ctrven.buscar(Venta.class, codigo);
                    if(aAnular.getAnulada()){
                        JOptionPane.showMessageDialog(this,
                           "La venta ya ha sido anulada!",
                           "Error!",
                            JOptionPane.ERROR_MESSAGE);
                    }else{
                    for(LineaTransaccion l : aAnular.getLineas()){
                        Long codigoProducto = l.getIdProducto();
                        Producto producto = ctrpro.buscar(Producto.class, codigoProducto);
                        producto.aumentarStock(l.getCantidad());
                        //producto.setStockActual(producto.getStockActual()+l.getCantidad());
                        ctrpro.actualizar(producto);
                    }
                    if(!aAnular.getEstadoPago() && aAnular.getFormaDePago().equalsIgnoreCase("Cuenta corriente")){
                        if(Objects.equals(aAnular.getMontoPago(), aAnular.getTotal())){
                            aAnular.getCliente().getCuentaCorriente().reducirMontoAcumulado(aAnular.getTotal());
                        }else{
                            aAnular.getCliente().getCuentaCorriente().reducirMontoAcumulado(aAnular.getMontoPago());
                            
                        }
                        ctrcli.actualizar(aAnular.getCliente());
                    }
                    
                    aAnular.setAnulada(true);
                    ctrven.actualizar(aAnular);
                    tablaVentas.setValueAt("Anulada", seleccionada, 2);
                    tablaVentas.setValueAt("Anulada", seleccionada, 8);
                    //DefaultTableModel tableModel = (DefaultTableModel) tablaVentas.getModel();
                    //tableModel.removeRow(tablaVentas.getSelectedRow());
                    }
                } catch (Exception ex) {
                    Logger.getLogger(VentanaListadoVentas.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }//GEN-LAST:event_botonBorrarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Long codigoSeleccionado = null;
        try{
            codigoSeleccionado = (Long) tablaVentas.getValueAt(tablaVentas.getSelectedRow(),0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,
                       "Por favor seleccione una venta!",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
        }
        try{
            Venta ven = ctrven.buscar(Venta.class, codigoSeleccionado);
            Window ancestor = SwingUtilities.getWindowAncestor(this);
            DetallesVenta dv = new DetallesVenta((Frame)ancestor, true,ven);
            dv.setVisible(true);

        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void cobrar(Venta ven){
        try {
            Window ancestor = SwingUtilities.getWindowAncestor(this);
            SeleccionarFechaCobro sfc = new SeleccionarFechaCobro((Frame)ancestor, true);
            sfc.setVisible(true);
            ven.setFechaCobro(sfc.getFechaSeleccionada());
            
            sfc.dispose();
            
            ven.setEstadoPago(true);
            if(ven.getFormaDePago().equals("Cuenta Corriente")){
                ven.getCliente().getCuentaCorriente().reducirMontoAcumulado(ven.getTotal());
            }
            ctrven.actualizar(ven);
            
            DefaultTableModel model = (DefaultTableModel) tablaVentas.getModel();
            model.setValueAt("Paga",tablaVentas.getSelectedRow(),8);
        } catch (Exception ex) {
            ex.printStackTrace();
            Logger.getLogger(VentanaListadoVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void botonCobroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCobroActionPerformed
        Long codigoSeleccionado = null;
        try{
            codigoSeleccionado = (Long) tablaVentas.getValueAt(tablaVentas.getSelectedRow(),0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,
                       "Por favor seleccione una venta!",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
        }
        try{
            Venta ven = ctrven.buscar(Venta.class, codigoSeleccionado);
            Window ancestor = SwingUtilities.getWindowAncestor(this);
            if(!ven.getEstadoPago()){
            if(ven.getEstaFacturada()){
                cobrar(ven);
                // <editor-fold defaultstate="collapsed" desc=" lo que haciamos antes ">
/*
                SeleccionarFechaCobro sfc = new SeleccionarFechaCobro((Frame)ancestor, true);
                sfc.setVisible(true);
                ven.setFechaCobro(sfc.getFechaSeleccionada());
                ven.setEstadoPago(true);
                ctrven.actualizar(ven);
                DefaultTableModel model = (DefaultTableModel) tablaVentas.getModel();
                model.setValueAt("Paga",tablaVentas.getSelectedRow(),8);
                 */

// </editor-fold>
            }else{
                int respuesta=JOptionPane.showConfirmDialog(this,
                        "Para cobrar una venta remitada esta primero debe ser facturada!"+
                        "¿Desea facturarla y cobrarla?",
                        "Atencion!",
                        JOptionPane.YES_NO_OPTION);
                if(respuesta == JOptionPane.YES_OPTION){
                    cobrar(ven);
                    generarFactura(ven);
                    ven.setEstaFacturada(true);
                    ctrven.actualizar(ven);
                    DefaultTableModel model = (DefaultTableModel) tablaVentas.getModel();
                    model.setValueAt("Si",tablaVentas.getSelectedRow(),7);
                    
                    
                }else{
                   return; 
                }
            }
        }else{
                JOptionPane.showMessageDialog(this,
                       "La venta ya fue cobrada anteriormente!",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_botonCobroActionPerformed

    private void botonFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFacturaActionPerformed
        Long codigoSeleccionado = null;
        try{
            codigoSeleccionado = (Long) tablaVentas.getValueAt(tablaVentas.getSelectedRow(),0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,
                       "Por favor seleccione una venta!",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
        }
        try{
            Venta ven = ctrven.buscar(Venta.class, codigoSeleccionado);
            Window ancestor = SwingUtilities.getWindowAncestor(this);
            if(ven.getEstaFacturada()){
                JOptionPane.showMessageDialog(this, "Ya ha sido facturada!, su numero es "+ven.getNumero_factura());
            }else{
                generarFactura(ven);
                ven.setEstaFacturada(true);
                ctrven.actualizar(ven);
                DefaultTableModel model = (DefaultTableModel) tablaVentas.getModel();
                model.setValueAt("Si",tablaVentas.getSelectedRow(),7);
                
            }
            //SeleccionarFechaCobro sfc = new SeleccionarFechaCobro((Frame)ancestor, true);
            //ven.setFechaCobro(sfc.getFechaSeleccionada());
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_botonFacturaActionPerformed

    private void botonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFiltrarActionPerformed
       DefaultTableModel model = (DefaultTableModel) tablaVentas.getModel();
        for(int i=0;i<tablaVentas.getRowCount();i++){
            model.removeRow(i);
        }
       Double mayorque;
       Double menorque;
        if(botonMayorQue.isSelected() && !campoMayorQue.getText().equals("") ){
            mayorque = Double.parseDouble(campoMayorQue.getText());
        }else if(botonMenorQue.isSelected() && !campoMenorQue.getText().equals("")){
            menorque = Double.parseDouble(campoMenorQue.getText());
        }else if(botonEntreMonto.isSelected() && !campoMinimoEntre.getText().equals("") && !campoMaximoEntre.getText().equals("")){
            mayorque = Double.parseDouble(campoMinimoEntre.getText());
            menorque = Double.parseDouble(campoMaximoEntre.getText());
        }
        for(Venta v: ventasActuales){
            if(!campoCliente.getText().equalsIgnoreCase("")){
                if(campoCliente.getText().equalsIgnoreCase(v.getCliente().getNombre())){
                    ventasFiltradas.add(v);
                }
            }
            
            if(!boxFactura.getSelectedItem().equals("TODOS")){
                if(boxFactura.getSelectedItem().equals(v.getTipo_factura())  || (boxFactura.getSelectedItem().equals("REMITO") && v.getRemitada() && !v.getEstaFacturada())){
                    if(!ventasFiltradas.contains(v)){
                        ventasFiltradas.add(v);
                    }
                }
            }else{
                ventasFiltradas.add(v);
            }
            if(boxEstado.getSelectedItem().equals("TODOS")){
                if(!ventasFiltradas.contains(v)){
                    ventasFiltradas.add(v);
                }
            }else if(boxEstado.getSelectedItem().equals("PAGA")){
                if(!ventasFiltradas.contains(v) && v.getEstadoPago()){
                    ventasFiltradas.add(v);
                }else if(ventasFiltradas.contains(v) && !v.getEstadoPago()){
                    ventasFiltradas.remove(v);
                }
            }else if(boxEstado.getSelectedItem().equals("IMPAGA")){
                if(!ventasFiltradas.contains(v) && !v.getEstadoPago()){
                    ventasFiltradas.add(v);
                }else if(ventasFiltradas.contains(v) && v.getEstadoPago()){
                    ventasFiltradas.remove(v);
                }
            }
            
            if (botonMayorQue.isSelected()) {
                mayorque = Double.parseDouble(campoMayorQue.getText());
                if(v.getTotal()>=mayorque && !ventasFiltradas.contains(v)){
                    ventasFiltradas.add(v);
                }else if (v.getTotal()<mayorque && ventasFiltradas.contains(v)){
                    ventasFiltradas.remove(v);
                }
            } else if (botonMenorQue.isSelected()) {
                menorque = Double.parseDouble(campoMenorQue.getText());
                if(v.getTotal()<=menorque && !ventasFiltradas.contains(v)){
                    ventasFiltradas.add(v);
                }else if (v.getTotal()>menorque && ventasFiltradas.contains(v)){
                    ventasFiltradas.remove(v);
                }
            } else if (botonEntreMonto.isSelected()) {
                mayorque = Double.parseDouble(campoMinimoEntre.getText());
                menorque = Double.parseDouble(campoMaximoEntre.getText());
                if(v.getTotal()<=menorque && v.getTotal()>=mayorque && !ventasFiltradas.contains(v)){
                    ventasFiltradas.add(v);
                }else if ((v.getTotal()>=menorque || v.getTotal()<=mayorque ) && ventasFiltradas.contains(v)){
                    ventasFiltradas.remove(v);
                }
            }
        }
        
        
        tablaVentas.getColumnModel().getColumn(8).setCellRenderer(new StatusColumnCellRenderer());
        tablaVentas.getColumnModel().getColumn(2).setCellRenderer(new StatusColumnCellRenderer());
        
        
        Object rowData[] = new Object[11];
        for(Venta ven : ventasFiltradas){
           rowData[0] = ven.getCodigoTransaccion();
           rowData[1] = ven.getFecha(); 
           if(ven.getAnulada()){
               rowData[2] = "Anulada";
               
           }else{
               rowData[2] = "Correcta";
           }
           rowData[3] = ven.getCliente().getNombre();           
           rowData[4] = ven.getTipo_factura();
           rowData[5] = ven.getNumero_factura();   
           rowData[6] = ven.getFormaDePago();
           if(ven.getEstaFacturada()){
               rowData[7] = "Si";
           }else{
               rowData[7] = "No (remitada)";
           }
           if(!ven.getAnulada()){
                if(ven.getEstadoPago()){
                    rowData[8] = "Paga";
                }else{
                    rowData[8] = "Pendiente";
                }
           }else{
               rowData[8] = "Anulada";
           }
           rowData[9] = ven.getTotal();
           rowData[10] = ven.getMontoPago();
           model.addRow(rowData);
        
       }
       tablaVentas.setModel(model);
       ventasFiltradas.clear();
    }//GEN-LAST:event_botonFiltrarActionPerformed

    private void botonBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarClienteActionPerformed
        try{
            Window ancestor = SwingUtilities.getWindowAncestor(this);
            filtrarClienteListadoVentas acv = new filtrarClienteListadoVentas((Frame)ancestor, rootPaneCheckingEnabled);
            acv.setVisible(true);
            Cliente C = acv.getC();
            if(C==null){
                campoCliente.setText("");
            }else{
                campoCliente.setText(C.getCodigoCliente()+" - "+C.getNombre());
            }
            System.out.println(C.getCondicionIVA());
            if(C.getCondicionIVA().equalsIgnoreCase("Consumidor final")){
                System.out.println("es consumidor final");
                boxFactura.getModel().setSelectedItem((String)"B"); 
            }else if(C.getCondicionIVA().equalsIgnoreCase("Responsable Inscripto")){
                boxFactura.getModel().setSelectedItem((String)"A"); 
            }else if(C.getCondicionIVA().equalsIgnoreCase("Monotributista")){
                boxFactura.getModel().setSelectedItem((String)"B");
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_botonBuscarClienteActionPerformed

    private void campoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoClienteActionPerformed

    private void botonFiltrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFiltrar1ActionPerformed
        this.campoCliente.setText("");
        this.boxFactura.getModel().setSelectedItem("A");
        this.boxEstado.getModel().setSelectedItem("TODOS");
        this.botonMayorQue.setSelected(true);
        this.campoMayorQue.setText("");
        this.campoMenorQue.setText("");
        this.campoMaximoEntre.setText("");
        this.campoMinimoEntre.setText("");
        this.campoAnteriorEntre.setDate(null);
        this.campoPosteriorEntre.setDate(null);
        this.ventasFiltradas.clear();
        try {
            formWindowOpened();
        } catch (Exception ex) {
            Logger.getLogger(VentanaListadoVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_botonFiltrar1ActionPerformed
    
    public void generarFactura(Venta ventaNueva){
        Factura factura = new Factura();
        factura.setVenta(ventaNueva);
        factura.setFechaEmision(new Date());
        factura.setNroPuntoFactura(sv.getPuntoVenta());

        String condicionIVA = "Responsable Inscripto";
        if(sv.getCondicionIva().equalsIgnoreCase(condicionIVA) 
                && factura.getVenta().getCliente().getCondicionIVA().equalsIgnoreCase(condicionIVA)){
            generarFacturaA(factura);
        }else if (sv.getCondicionIva().equalsIgnoreCase(condicionIVA)) {
            generarFacturaB(factura);
        }else
            generarFacturaC(factura);
    }
    
    public void generarFacturaA(Factura factura){
        try {
            factura.setTipoFactura("A");
            factura.setImporteTotal(factura.getVenta().getImporteTotalConIVA());
            int numeroFacturaNuevo = 1;
            for(Factura f : facturasActuales){
                if(f.getTipoFactura().equalsIgnoreCase("A")){
                    numeroFacturaNuevo++;
                }
            }
            factura.setNroFactura(numeroFacturaNuevo);
            ////factura.setNroFactura(sv.getNumeroFactura(factura.getTipoFactura()));
            /*if(!factura.getVenta().getEstadoPago()){
                
                factura.getVenta().getCliente().getCuentaCorriente().reducirMontoAcumulado((double)factura.getImporteTotal());
            }*/
            try {
                ctrfac.crear(factura);
            } catch (Exception ex) {
                ex.printStackTrace();
                Logger.getLogger(NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
            sv.addFactura(factura);
            sv.guardarDatos();
            String direccionCliente;
            Cliente C=factura.getVenta().getCliente();
            if(C!=null){
               direccionCliente = C.getCalle()+", "+C.getNumeroCalle()+", "+C.getLocalidad()+", "+C.getProvincia();
            }else{
                direccionCliente = "";
            }
            /*factura.getVenta().getCliente().getCuentaCorriente().reducirMontoAcumulado(Double.NaN); restarImporte(factura.getImporteTotal());
            sv.addFactura(factura);
            sv.guardarDatos();*/
            
            JasperReport jr = (JasperReport)JRLoader.loadObject
            (this.getClass().getResource("/reporte/facturaA.jasper"));
            //JasperReport jr = JasperCompileManager.compileReport(getClass()
            //        .getResource("/reporte/facturaA.jrxml").getPath());
            Map mapa = new HashMap();
            JasperPrint jp;
            mapa.put("domicilioEmpresa", sv.getDomicilio());
            mapa.put("nombreEmpresa", sv.getNombre());
            mapa.put("condicionIVAEmpresa", sv.getCondicionIva());
            mapa.put("puntoDeVentaEmpresa", String.format("%04d", sv.getPuntoVenta()));
            mapa.put("nroFactura", String.format("%08d", numeroFacturaNuevo));
            mapa.put("cuitEmpresa", sv.getCuit());
            mapa.put("fechaInicioActividades", sv.getFechaInicio());
            mapa.put("cuitCliente", String.valueOf(factura.getVenta().getCliente().getCuit()));
            mapa.put("condicionIvaCliente", factura.getVenta().getCliente().getCondicionIVA());
            mapa.put("formaPago", factura.getVenta().getFormaDePago());
            mapa.put("nombreCliente", factura.getVenta().getCliente().getNombre());
            mapa.put("domicilioCliente", direccionCliente);
            mapa.put("remitos", sv.getNroRemito(factura.getVenta()));
            mapa.put("importeNeto", String.valueOf(factura.getVenta().getTotal()));
            mapa.put("IVA27", String.valueOf(factura.getVenta().getIva27()));
            mapa.put("IVA21", String.valueOf(factura.getVenta().getIva21()));
            mapa.put("IVA10", String.valueOf(factura.getVenta().getIva10()));
            mapa.put("IVA5", String.valueOf(factura.getVenta().getIva05()));
            mapa.put("importeTotal", String.valueOf(factura.getImporteTotal()));
                     
            jp = JasperFillManager.fillReport(jr,
                mapa , new JRBeanCollectionDataSource(factura.getListaComprobanteA()));
            JasperViewer visor = new JasperViewer(jp,false);
            visor.setVisible(true);
            this.dispose();
            visor.toFront();
        }catch (JRException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void generarFacturaB(Factura factura){
        try {
            factura.setTipoFactura("B");
            factura.setImporteTotal(factura.getVenta().getImporteTotalConIVA());
            int numeroFacturaNuevo = 1;
            for(Factura f : facturasActuales){
                if(f.getTipoFactura().equalsIgnoreCase("B")){
                    numeroFacturaNuevo++;
                }
            }
            factura.setNroFactura(numeroFacturaNuevo);
            /*if(!factura.getVenta().getEstadoPago()){
                factura.getVenta().getCliente().getCuentaCorriente().reducirMontoAcumulado((double)factura.getImporteTotal());
            }*/
            
            String direccionCliente;
            Cliente C=factura.getVenta().getCliente();
            if(C!=null){
               direccionCliente = C.getCalle()+", "+C.getNumeroCalle()+", "+C.getLocalidad()+", "+C.getProvincia();
            }else{
                direccionCliente = "";
            }
            try {
                ctrfac.crear(factura);
            } catch (Exception ex) {
                ex.printStackTrace();
                Logger.getLogger(NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
            sv.addFactura(factura);
            sv.guardarDatos();
            
            JasperReport jr = (JasperReport)JRLoader.loadObject
            (this.getClass().getResource("/reporte/facturaB.jasper"));
            //JasperReport jr = JasperCompileManager.compileReport(getClass()
            //        .getResource("/reporte/facturaA.jrxml").getPath());
            Map mapa = new HashMap();
            JasperPrint jp;
            mapa.put("domicilioEmpresa", sv.getDomicilio());
            mapa.put("nombreEmpresa", sv.getNombre());
            mapa.put("condicionIVAEmpresa", sv.getCondicionIva());
            mapa.put("puntoDeVentaEmpresa", String.format("%04d", sv.getPuntoVenta()));
            mapa.put("nroFactura", String.format("%08d", numeroFacturaNuevo));
            mapa.put("cuitEmpresa", sv.getCuit());
            mapa.put("fechaInicioActividades", sv.getFechaInicio());
            mapa.put("cuitCliente", String.valueOf(factura.getVenta().getCliente().getCuit()));
            mapa.put("condicionIvaCliente", factura.getVenta().getCliente().getCondicionIVA());
            mapa.put("formaPago", factura.getVenta().getFormaDePago());
            mapa.put("nombreCliente", factura.getVenta().getCliente().getNombre());
            
            mapa.put("domicilioCliente", direccionCliente);
            mapa.put("remitos", sv.getNroRemito(factura.getVenta()));
            mapa.put("importeTotal", String.valueOf(factura.getImporteTotal()));
                     
            jp = JasperFillManager.fillReport(jr,
                mapa , new JRBeanCollectionDataSource(factura.getListaComprobanteB()));
            JasperViewer visor = new JasperViewer(jp,false);
            visor.setVisible(true);
            this.dispose();
            visor.toFront();
        }catch (JRException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void generarFacturaC(Factura factura){
        try {
            factura.setTipoFactura("C");
            String total = String.valueOf(factura.getVenta().getSubTotal());
            Float total2 = Float.valueOf(total);
            factura.setImporteTotal(total2);
            
            int numeroFacturaNuevo = 1;
            for(Factura f : facturasActuales){
                if(f.getTipoFactura().equalsIgnoreCase("C")){
                    numeroFacturaNuevo++;
                }
            }
            factura.setNroFactura(numeroFacturaNuevo);
            
            /*if(!factura.getVenta().getEstadoPago()){
                factura.getVenta().getCliente().getCuentaCorriente().reducirMontoAcumulado((double)factura.getImporteTotal());
            }*/
            Cliente C=factura.getVenta().getCliente();
            String direccionCliente;
            if(C!=null){
               direccionCliente = C.getCalle()+", "+C.getNumeroCalle()+", "+C.getLocalidad()+", "+C.getProvincia();
            }else{
               direccionCliente = "";
            }
            try {
                ctrfac.crear(factura);
            } catch (Exception ex) {
                ex.printStackTrace();
                Logger.getLogger(NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
            sv.addFactura(factura);
            sv.guardarDatos();
            
            JasperReport jr = (JasperReport)JRLoader.loadObject
            (this.getClass().getResource("/reporte/facturaC.jasper"));
            //JasperReport jr = JasperCompileManager.compileReport(getClass()
            //        .getResource("/reporte/facturaA.jrxml").getPath());
            Map mapa = new HashMap();
            JasperPrint jp;
            mapa.put("domicilioEmpresa", sv.getDomicilio());
            mapa.put("nombreEmpresa", sv.getNombre());
            mapa.put("condicionIVAEmpresa", sv.getCondicionIva());
            mapa.put("puntoDeVentaEmpresa", String.format("%04d", sv.getPuntoVenta()));
            mapa.put("nroFactura", String.format("%08d", numeroFacturaNuevo));
            mapa.put("cuitEmpresa", sv.getCuit());
            mapa.put("fechaInicioActividades", sv.getFechaInicio());
            mapa.put("cuitCliente", String.valueOf(factura.getVenta().getCliente().getCuit()));
            mapa.put("condicionIvaCliente", factura.getVenta().getCliente().getCondicionIVA());
            mapa.put("formaPago", factura.getVenta().getFormaDePago());
            mapa.put("nombreCliente", factura.getVenta().getCliente().getNombre());
            
            mapa.put("domicilioCliente", direccionCliente);
            mapa.put("remitos", sv.getNroRemito(factura.getVenta()));
            mapa.put("importeTotal", String.valueOf(factura.getImporteTotal()));
                     
            jp = JasperFillManager.fillReport(jr,
                mapa , new JRBeanCollectionDataSource(factura.getListaComprobanteC()));
            JasperViewer visor = new JasperViewer(jp,false);
            
            visor.setVisible(true);
            this.dispose();
            visor.toFront();
        }catch (JRException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }
    
   
    
    
    private void formWindowOpened() throws Exception {
        DefaultTableModel model = (DefaultTableModel) tablaVentas.getModel();
        for(int i=0;i<tablaVentas.getRowCount();i++){
            model.removeRow(i);
        }
        
        tablaVentas.getColumnModel().getColumn(8).setCellRenderer(new StatusColumnCellRenderer());
        tablaVentas.getColumnModel().getColumn(2).setCellRenderer(new StatusColumnCellRenderer());
        
        
        Object rowData[] = new Object[11];
        for(Venta v : ctrven.buscarConConsultaNombrada("Venta.findAll")){
           rowData[0] = v.getCodigoTransaccion();
           rowData[1] = v.getFecha(); 
           if(v.getAnulada()){
               rowData[2] = "Anulada";
               
           }else{
               rowData[2] = "Correcta";
           }
           rowData[3] = v.getCliente().getNombre();           
           rowData[4] = v.getTipo_factura();
           rowData[5] = v.getNumero_factura();   
           rowData[6] = v.getFormaDePago();
           if(v.getEstaFacturada()){
               rowData[7] = "Si";
           }else{
               rowData[7] = "No (remitada)";
           }
           if(!v.getAnulada()){
                if(v.getEstadoPago()){
                    rowData[8] = "Paga";
                }else{
                    rowData[8] = "Pendiente";
                }
           }else{
               rowData[8] = "Anulada";
           }
           rowData[9] = v.getTotal();
           if(v.getFormaDePago().equalsIgnoreCase("Cuenta corriente")){
               rowData[10] = v.getMontoPago();
           }else{
               rowData[10] = "N/D";
           }
           
           model.addRow(rowData);
        
       }
       tablaVentas.setModel(model);
   
    }   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    VentanaListadoVentas dialog = new VentanaListadoVentas(new javax.swing.JFrame(), true,null);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaListadoVentas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonBuscarCliente;
    private javax.swing.JButton botonCobro;
    private javax.swing.JRadioButton botonEntreMonto;
    private javax.swing.JButton botonFactura;
    private javax.swing.JButton botonFiltrar;
    private javax.swing.JButton botonFiltrar1;
    private javax.swing.JRadioButton botonMayorQue;
    private javax.swing.JRadioButton botonMenorQue;
    private javax.swing.JComboBox<String> boxEstado;
    private javax.swing.JComboBox<String> boxFactura;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private com.toedter.calendar.JDateChooser campoAnterior;
    private com.toedter.calendar.JDateChooser campoAnteriorEntre;
    private javax.swing.JTextField campoCliente;
    private javax.swing.JTextField campoMaximoEntre;
    private javax.swing.JTextField campoMayorQue;
    private javax.swing.JTextField campoMenorQue;
    private javax.swing.JTextField campoMinimoEntre;
    private com.toedter.calendar.JDateChooser campoPosterior;
    private com.toedter.calendar.JDateChooser campoPosteriorEntre;
    private javax.swing.JLabel etiquetaBotonBorrar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaVentas;
    // End of variables declaration//GEN-END:variables
}
