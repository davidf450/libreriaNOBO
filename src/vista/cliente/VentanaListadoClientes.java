/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.cliente;


import TableRenders.StatusColumnCellRendererCliente;
import TableRenders.StatusColumnCellRendererClienteWarnings;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.Venta;
import java.util.List;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import controlador.ControladorVenta;
import controlador.ControladorCliente;
import java.awt.Frame;
import java.awt.Window;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import modelo.Proveedor;
import vista.AltaProveedor.ModificarProveedor;
import modelo.Usuario;
import controlador.ControladorCuentaCorriente;
import modelo.CuentaCorriente;

/**
 *
 * @author Analía Santomé
 */
public class VentanaListadoClientes extends javax.swing.JDialog {
    ControladorCliente ctrcli = new ControladorCliente();
    Usuario logueado = new Usuario();
    /**
     * Creates new form VentanaListadoCuentas
     */
    public VentanaListadoClientes(java.awt.Frame parent, boolean modal,Usuario logueado) throws Exception {
        super(parent, modal);
        this.logueado = logueado;
        initComponents();
        if(!this.logueado.getEsAdministrador()){
            this.botonAlterarMonto.setVisible(false);
            this.botonEliminar.setVisible(false);
            this.botonRegistrarPago.setVisible(false);
            this.etiquetaEliminar.setVisible(false);
            this.etiquetaMonto.setVisible(false);
            this.etiquetaPago.setVisible(false);
        }
        setLocationRelativeTo(null);
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        botonRegistrarPago = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonAlterarMonto = new javax.swing.JButton();
        etiquetaEliminar = new javax.swing.JLabel();
        etiquetaPago = new javax.swing.JLabel();
        etiquetaMonto = new javax.swing.JLabel();
        botonEliminar1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablaClientes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Fecha de alta", "Monto maximo", "Monto actual", "Telefono", "Condicion IVA", "Habilitado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        botonRegistrarPago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/ingresarPago.png"))); // NOI18N
        botonRegistrarPago.setToolTipText("ingresar nuevo pago");
        botonRegistrarPago.setBorderPainted(false);
        botonRegistrarPago.setContentAreaFilled(false);
        botonRegistrarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarPagoActionPerformed(evt);
            }
        });

        botonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/borrar.png"))); // NOI18N
        botonEliminar.setToolTipText("eliminar");
        botonEliminar.setBorderPainted(false);
        botonEliminar.setContentAreaFilled(false);
        botonEliminar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/borrarSinTapa.png"))); // NOI18N
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonAlterarMonto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/alterarMonto.png"))); // NOI18N
        botonAlterarMonto.setToolTipText("alterar monto");
        botonAlterarMonto.setBorderPainted(false);
        botonAlterarMonto.setContentAreaFilled(false);
        botonAlterarMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAlterarMontoActionPerformed(evt);
            }
        });

        etiquetaEliminar.setText("Eliminar");

        etiquetaPago.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiquetaPago.setText("Ingresar pago");

        etiquetaMonto.setText("Modificar monto");

        botonEliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/borrar.png"))); // NOI18N
        botonEliminar1.setToolTipText("eliminar");
        botonEliminar1.setBorderPainted(false);
        botonEliminar1.setContentAreaFilled(false);
        botonEliminar1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/images/borrarSinTapa.png"))); // NOI18N
        botonEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminar1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Deshabilitar/Habilitar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(botonEliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(etiquetaEliminar)
                        .addGap(32, 32, 32)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonRegistrarPago, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAlterarMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaMonto, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonRegistrarPago, javax.swing.GroupLayout.PREFERRED_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(botonAlterarMonto)
                            .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(botonEliminar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaEliminar)
                    .addComponent(etiquetaPago)
                    .addComponent(etiquetaMonto)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botonAlterarMonto, botonEliminar, botonRegistrarPago});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegistrarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarPagoActionPerformed
        Long codigoSeleccionado = null;
        try{
            codigoSeleccionado = (Long) tablaClientes.getValueAt(tablaClientes.getSelectedRow(),0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,
                       "Por favor seleccione un cliente!",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
        }
        
        try{
            Cliente cli = ctrcli.buscar(Cliente.class, codigoSeleccionado);
            ControladorVenta ctrven = new ControladorVenta();
            ControladorCuentaCorriente ctrcc = new ControladorCuentaCorriente();
            ArrayList<Venta> ventasCorrespondientes = new ArrayList<>();
            for(Venta v: ctrven.buscarConConsultaNombrada("Venta.findAll")){
                System.out.println(v.getCliente().getNombre());
                if(v.getCliente().getNombre().equals(cli.getNombre()) && v.getFormaDePago().equalsIgnoreCase("Cuenta Corriente")){
                    ventasCorrespondientes.add(v);
                }
            }
            if(!ventasCorrespondientes.isEmpty()){
                ventasCorrespondientes.sort(null);
            }else{
                System.out.println("la lista esta vacia");
            }
            
            
            
            Window ancestor = SwingUtilities.getWindowAncestor(this);
            RegistrarPagoCC rp = new RegistrarPagoCC((Frame)ancestor, true,cli.getCuentaCorriente());
            rp.setVisible(true);
            
            Double montoIngresado = rp.getMontoIngresado();
            Double montoAlterar = rp.getMontoIngresado();
            for(Venta v:ventasCorrespondientes){
                if(montoIngresado>0 && v.getMontoPago()>0){
                    if(v.getMontoPago()-montoIngresado>0){
                        v.setMontoPago(v.getMontoPago()-montoIngresado);
                        montoIngresado = 0.0;
                        ctrven.actualizar(v);
                        break;
                    }else{
                        montoIngresado-=v.getMontoPago();
                        v.setMontoPago(0.0);
                        v.setEstadoPago(true);
                        ctrven.actualizar(v);
                        
                    }
                    
                }
            }
            CuentaCorriente cc = cli.getCuentaCorriente();
            cc.reducirMontoAcumulado(montoAlterar);
            
            try{
                ctrcc.actualizar(cc);
            }catch (Exception ex){
                JOptionPane.showMessageDialog(this,
                       "Ocurrio un error al actualizar el monto",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
            cargarTabla();

        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_botonRegistrarPagoActionPerformed
    private Boolean validarAdmin(Usuario u){
        String passAdmin = JOptionPane.showInputDialog("Por favor reingrese la clave de Administrador");
        return u.getPassword().equals(passAdmin);
    }
    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        
        
       if(validarAdmin(logueado)){
           Long codigoSeleccionado = null;
        try{
            codigoSeleccionado = (Long) tablaClientes.getValueAt(tablaClientes.getSelectedRow(),0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,
                       "Por favor seleccione un cliente!",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
        }

        try{
            DefaultTableModel tableModel = (DefaultTableModel) tablaClientes.getModel();
            Cliente cli = ctrcli.buscar(Cliente.class, codigoSeleccionado);
            if(cli.getCuentaCorriente().getMonto_acumulado()>0){
                JOptionPane.showMessageDialog(this,
                       "No se puede eliminar un cliente que registra deuda",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            ctrcli.borrar(cli);
            tableModel.removeRow(tablaClientes.getSelectedRow());
            

        }catch(Exception e){
            e.printStackTrace();
        }
       }else{
                JOptionPane.showMessageDialog(this,
                    "Error de autentificacion",
                    "Error!",
                    JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonAlterarMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAlterarMontoActionPerformed
        Long codigoSeleccionado = null;
        try{
            codigoSeleccionado = (Long) tablaClientes.getValueAt(tablaClientes.getSelectedRow(),0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,
                       "Por favor seleccione un cliente!",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
        }
        
        //String nombreSeleccionado = (String) tablaProductos.getValueAt(tablaProductos.getSelectedRow(), 1);
        try{
            Cliente cli = ctrcli.buscar(Cliente.class, codigoSeleccionado);

            //Window parentWindow = SwingUtilities.windowForComponent(jButton2);

            //ModificarProducto2 mp = new ModificarProducto((Frame) parentWindow, true,prod);
            Window ancestor = SwingUtilities.getWindowAncestor(this);
            SumarACC rp = new SumarACC((Frame)ancestor, true,cli.getCuentaCorriente());
            rp.setVisible(true);
            cargarTabla();

        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_botonAlterarMontoActionPerformed

    private void botonEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminar1ActionPerformed
        if(validarAdmin(logueado)){
           Long codigoSeleccionado = null;
        try{
            codigoSeleccionado = (Long) tablaClientes.getValueAt(tablaClientes.getSelectedRow(),0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,
                       "Por favor seleccione un cliente!",
                       "Error!",
                        JOptionPane.ERROR_MESSAGE);
        }

        try{
            DefaultTableModel tableModel = (DefaultTableModel) tablaClientes.getModel();
            Cliente cli = ctrcli.buscar(Cliente.class, codigoSeleccionado);
            if(tablaClientes.getValueAt(tablaClientes.getSelectedRow(),7).equals("Si")){
            int respuesta=JOptionPane.showConfirmDialog(this,
                        "¿Esta seguro de que desea deshabilitar al cliente " + cli.getNombre()+"?"+"\n"+
                        "Esta accion no permitira realizar ventas a este cliente en el futuro",
                        "Atencion!",
                        JOptionPane.YES_NO_OPTION);
            if(respuesta==JOptionPane.YES_OPTION){
                cli.setHabilitado(false);
                ctrcli.actualizar(cli);
            }
            tablaClientes.setValueAt("No", tablaClientes.getSelectedRow(),7);
            tableModel.fireTableCellUpdated(tablaClientes.getSelectedRow(), 7);
            }else{
                int respuesta=JOptionPane.showConfirmDialog(this,
                        "¿Esta seguro de que desea habilitar al cliente " + cli.getNombre()+"?",
                        "Atencion!",
                        JOptionPane.YES_NO_OPTION);
                if(respuesta==JOptionPane.YES_OPTION){
                    cli.setHabilitado(true);
                    ctrcli.actualizar(cli);
                }
                tablaClientes.setValueAt("Si", tablaClientes.getSelectedRow(),7);
                tableModel.fireTableCellUpdated(tablaClientes.getSelectedRow(), 7);
            }
            

        }catch(Exception e){
            e.printStackTrace();
        }
       }else{
                JOptionPane.showMessageDialog(this,
                    "Error de autentificacion",
                    "Error!",
                    JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_botonEliminar1ActionPerformed
    
    
    private void cargarTabla() throws Exception {
        tablaClientes.getColumnModel().getColumn(3).setCellRenderer(new StatusColumnCellRendererClienteWarnings());
        tablaClientes.getColumnModel().getColumn(4).setCellRenderer(new StatusColumnCellRendererClienteWarnings());
        tablaClientes.getColumnModel().getColumn(7).setCellRenderer(new StatusColumnCellRendererCliente());
        DefaultTableModel model = (DefaultTableModel) tablaClientes.getModel();
        model.setRowCount(0);
        Object rowData[] = new Object[8];
        for(Cliente cli : ctrcli.buscarConConsultaNombrada("Cliente.findAll")){
           rowData[0] = cli.getCodigoCliente();
           rowData[1] = cli.getNombre();           
           rowData[2] = cli.getCuentaCorriente().getFecha_alta();
           rowData[3] = cli.getCuentaCorriente().getMonto_maximo();
           rowData[4] = cli.getCuentaCorriente().getMonto_acumulado();
           rowData[5] = cli.getTelefono1();
           rowData[6] = cli.getCondicionIVA();
           if(cli.getHabilitado()){
                rowData[7] = "Si";
           }else{
               rowData[7] = "No";
           }
           model.addRow(rowData);
        
       }
       tablaClientes.setModel(model);
   
    }   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaListadoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    VentanaListadoClientes dialog = new VentanaListadoClientes(new javax.swing.JFrame(), true,null);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaListadoClientes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAlterarMonto;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonEliminar1;
    private javax.swing.JButton botonRegistrarPago;
    private javax.swing.JLabel etiquetaEliminar;
    private javax.swing.JLabel etiquetaMonto;
    private javax.swing.JLabel etiquetaPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables
}
